
@{
    ViewBag.Title = "PanelAlumno";
    Layout = "~/Views/Shared/MasterPageAmplio.cshtml";
}



<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<link href="~/Scripts/css/estilosTabs.css" rel="stylesheet" />
<script src="~/Scripts/js/jsTabs.js"></script>
<script type="text/javascript">
     $(document).ready(
        function () {
            $("#msjExito").hide();
            $('#TProgramas').DataTable({
                language: {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ Registros",
                    "sZeroRecords": "&nbsp;",
                    "sEmptyTable": "&nbsp;",
                    "sInfo": "Encontrados: _TOTAL_ Registros (Mostrando del _START_ al _END_)",
                    "sInfoEmpty": "* No se han encontrado resultados en la búsqueda",
                    "sInfoFiltered": "",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                aoColumnDefs: [{ 'bSortable': false, 'aTargets': ['no-sortable'] }]
            });

            $('#TFamilias').DataTable({
                language: {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ Registros",
                    "sZeroRecords": "&nbsp;",
                    "sEmptyTable": "&nbsp;",
                    "sInfo": "Encontrados: _TOTAL_ Registros (Mostrando del _START_ al _END_)",
                    "sInfoEmpty": "* No se han encontrado resultados en la búsqueda",
                    "sInfoFiltered": "",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                aoColumnDefs: [{ 'bSortable': false, 'aTargets': ['no-sortable'] }]
            });


        }
    );


    function SeleccionarFamilia(idAlumno, idFamilia) {

        var params = { 'idAlumno': idAlumno, 'idFamilia': idFamilia};
        $.ajax({
             url: '@Url.Action("SeleccionarFamilia", "User")',
            type: 'POST',
            data: params,
            success: function (result) {
                //alert(result);
                if (result === 'true') {
                    toastr.success('Solicitud enviada espere confirmacion');
                   
                }
            
                else {
                    toastr.error(result);
                }
            },
            error: function () {
                alert('Ajax arroja error');
            }
        }
        );
    }

    function GenerarReporte(idAlumno,idPrograma) {
        var params = { 'idAlumno': idAlumno, 'idPrograma': idPrograma};
        $.ajax({
             url: '@Url.Action("GenerarReporte", "User")',
            type: 'POST',
            data: params,
            success: function (result) {
                //alert(result);
                if (result === 'true') {
                    toastr.success('La descarga del certificado comenzara en breve');
                    window.open('http://localhost:64400/Scripts/Documentos/certificadoAlumno.pdf');
                }
                else {
                    toastr.error(result);
                }
            },
            error: function () {
                alert('Ajax arroja error');
            }
        }
        );
    }

</script>

<center>
    <h2>PanelAlumno</h2>

    <p>Seleccione la accion a realizar</p>


    <div class="tab">
        <form action="@Url.Action("Calificaciones", "User")" method="post"> <button class="tablinks" onclick="GoToMisNotas()">Ver notas</button> <input type="hidden" id="id" name="id" value="@Session["idUsuario"]" /></form>
        <button class="tablinks" onclick="openCity(event, 'Programas')">Ver programas de estudios</button>
        <button class="tablinks" onclick="openCity(event, 'Familias')">Seleccionar familia</button>
        <button class="tablinks" onclick="openCity(event, 'Certificados')">Certificados</button>
    </div>
</center>
<!-- Tab content -->
<div class="alert alert-success" id="msjExito">
    Usuario eliminado con exito
</div>
<div id="Programas" class="tabcontent">
    <h3>Programas en los que participa</h3>
    <a href="@Url.Action("ProgramasEstudio", "Home")">
        Haga click aqui si desea buscar programas para postular <img src="~/Scripts/images/toggle01.png" />
    </a>
    <table id="TProgramas" style="width:100%">
        <thead>
            <tr>
                <th>Nombre del programa</th>
                <th>Estado Postulacion</th>
                <th>Fecha de postulacion</th>
                
            </tr>
        </thead>
        @{
            List<Negocio.ClasesModelo.Postulante> list = new Negocio.OperacionesPostulante().TraerTodo();
            Negocio.OperacionesProgramasEstudios oprog = new Negocio.OperacionesProgramasEstudios();
            bool postulo = false;
            int idProg=0;
            foreach (Negocio.ClasesModelo.Postulante post in list)
            {
                if (post.IDUSUARIOFK == int.Parse(Session["idUsuario"].ToString()))
                {
                    idProg = post.IDPROGRAMAESTUDIOFK;
                    postulo = true;
                    <tr>
                        <th>@oprog.TraerNombrePorId(post.IDPROGRAMAESTUDIOFK)</th>
                        <th>
                            @{
                        if (post.ESTADOPOSTULACION == "APROBADO")
                        {
                                    <font color="green">@post.ESTADOPOSTULACION</font>
                                }
                        else
                        {
                                    <font color="red">@post.ESTADOPOSTULACION</font>
                                }
                    }

                        </th>
                        <th>@post.FECHAPOSTULACION</th>


                    </tr>
                }
            }
        }

    </table>
</div>

<div id="Familias" class="tabcontent">
    <h3>Familias disponibles</h3>
    <a href="@Url.Action("ProgramasEstudio", "Home")">
        
    </a>
    <table id="TFamilias" style="width:100%">
        <thead>
            <tr>
                <th>Nombre completo</th>
                <th>Telefono</th>
                <th>Email</th>
                <th>Acciones</th>
            </tr>
        </thead>
        @{
            if (postulo)
            {
                int idCentro = oprog.TraerPorId(idProg).IDCENTRO?? default(int);
                List<Negocio.ClasesModelo.Usuario> lista = new Negocio.OperacionesUsuarios().TraerFamilias();
                var familias = lista.Where(i=>i.idInstitucion==41);
                Negocio.ProgramaEstudios programa=oprog.TraerPorId(idProg);
                foreach (Negocio.ClasesModelo.Usuario usu in lista)
                {
                    int idPropio = 0;
                    int.TryParse(Session["idUsuario"].ToString(), out idPropio);
                    <tr>
                        <th>@string.Format("{0} {1} {2} {3}", usu.Pnombre, usu.Snombre, usu.Appat, usu.Apmat)</th>
                        <th>@usu.FonoCelular</th>
                        <th>@usu.Email</th>
                        <th> <a href="@Url.Action("VerAntecedentes", "User")?id=@usu.IdUsuario">Ver antecedentes</a> <a href="javascript:void(0)" onclick="SeleccionarFamilia(@usu.IdUsuario,@idPropio)"><img src="~/Scripts/images/select.png"  width="20" height="20"/></a> </th>
                    </tr>
                }
            }
        }

    </table>
    @{ 
        if (!postulo)
        {
            <label>Debe postular y haber sido seleccionado para acceder a esta funcion</label>
        }
    }
</div>

<div id="Certificados" class="tabcontent">
    @{ 
        if (postulo)
        {
    <a href="javascript:void(0)" onclick="GenerarReporte(@int.Parse(Session["idUsuario"].ToString()),@idProg)"><img src="~/Scripts/images/DescargarPDF.png" />Certificado de aprobacion</a>
        }
    }
</div>