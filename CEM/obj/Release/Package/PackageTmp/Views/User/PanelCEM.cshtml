
@{
    ViewBag.Title = "PanelCEM";
    Layout = "~/Views/Shared/MasterPageAmplio.cshtml";
}




<title>Panel CEM</title>
<script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<link href="~/Scripts/css/estilosTabs.css" rel="stylesheet" />
<script src="~/Scripts/js/jsTabs.js"></script>
<script type="text/javascript">
     $(document).ready(
        function () {
            $("#msjExito").hide();
            $('#TProgramas').DataTable({
                language: {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ Registros",
                    "sZeroRecords": "&nbsp;",
                    "sEmptyTable": "&nbsp;",
                    "sInfo": "Encontrados: _TOTAL_ Registros (Mostrando del _START_ al _END_)",
                    "sInfoEmpty": "* No se han encontrado resultados en la búsqueda",
                    "sInfoFiltered": "",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                aoColumnDefs: [{ 'bSortable': false, 'aTargets': ['no-sortable'] }]
            });

            $('#TAlumnos').DataTable({
                language: {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ Registros",
                    "sZeroRecords": "&nbsp;",
                    "sEmptyTable": "&nbsp;",
                    "sInfo": "Encontrados: _TOTAL_ Registros (Mostrando del _START_ al _END_)",
                    "sInfoEmpty": "* No se han encontrado resultados en la búsqueda",
                    "sInfoFiltered": "",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }
                },
                aoColumnDefs: [{ 'bSortable': false, 'aTargets': ['no-sortable'] }]
            });
        }
    );

    function publicar(id) {
        var parms = { 'idPrograma': id };
            $.ajax({
                  url: '@Url.Action("PublicarPrograma", "User")',
                  type: 'POST',
                  data: parms,
                  success: function (result) {
                      //alert(result);
                      if (result === 'true') {
                          $("#msjExito").show(2000).delay(2000).fadeOut(2000);
                          $("#TPDE").load(location.href + " #TPDE>*", "");
                          $("#msjExito").html("Programa de estudios publicado con exito");
                      }
                      
                      else {
                          $("#msj").show(2000).delay(2000).fadeOut(2000);
                      }
                  }
            }
            );
    }


    function GenerarReporte(idAlumno, idPrograma) {
    var params = { 'idAlumno': idAlumno, 'idPrograma': idPrograma };
    $.ajax({
        url: '@Url.Action("GenerarReporte", "User")',
        type: 'POST',
        data: params,
        success: function (result) {
            //alert(result);
            if (result === 'true') {
                toastr.success('La descarga del certificado comenzara en breve');
                window.open('http://localhost:64400/Scripts/Documentos/certificadoAlumno.pdf');
            }
            else {
                toastr.error(result);
            }
        },
        error: function () {
            alert('Ajax arroja error');
        }
    }
    );
}


</script>

<center>
    <h2>PanelCEM</h2>

    <p>Seleccione la accion a realizar</p>


    <div class="tab">
        <button class="tablinks" onclick="openCity(event, 'Postulantes')">Programas impartidos</button>
        <button class="tablinks" onclick="openCity(event, 'reportes')">Certificados</button>
        <button class="tablinks" onclick="openCity(event, 'ayuda')">Ayuda</button>
    </div>
</center>
<!-- Tab content -->
<div class="alert alert-success" id="msjExito">
    Usuario eliminado con exito
</div>
<div id="Postulantes" class="tabcontent">
    <h3>Programas</h3>
    <a href="@Url.Action("AgregarPrograma", "User")">
        <img src="~/Scripts/images/toggle01.png" /> Agregar nuevo programa de estudio
    </a>
    <table id="TProgramas" style="width:100%">
        <thead>
            <tr>
                <th>Nombre del programa</th>
                <th>Area</th>
                <th>Fecha publicacion</th>
                <th>Cupos</th>
                <th>Tipo periodo</th>
                <th>Publicado</th>
                <th>Acciones</th>
            </tr>
            @{
                List<Negocio.ProgramaEstudios> lista = new Negocio.OperacionesProgramasEstudios().TraerTodo();
                foreach (Negocio.ProgramaEstudios prog in lista)
                {
                    bool isPublicado=prog.PUBLICADO=='1';
                    string publish="No";
                    if (isPublicado)
                    {
                        publish = "si";
                    }
                    string area = prog.AREAESCUELA;
                    if (string.IsNullOrEmpty(area))
                    {
                        area = "No especificado";
                    }
                        <tr>
                            <th>@prog.NOMBREPROGRAMA</th>
                            <th>@area</th>
                            <th>@prog.FECHAPUBLICACION</th>
                            <th>@prog.CUPOS</th>
                            <th>@prog.TIPOPERIODO</th>
                            <th>@publish</th>
                            <th>
                                <form action="@Url.Action("VerPostulantes","User")" method="post">
                                    <input type="hidden" value="@prog.IDPROGRAMAESTUDIO" id="id" name="id" />
                                    <input type="hidden" value="@prog.NOMBREPROGRAMA" id="nom" name="nom" />
                                    <input class="btn btn-link" type="submit" value="Ver Postulantes" />
                                    @{
                                        if (!isPublicado)
                                        {
                                            <a href="javascript:void(0)" onclick="publicar(@prog.IDPROGRAMAESTUDIO)"> <img src="~/Scripts/images/publicar.png" width="20" height="20" /></a>

                                        }
                                    }
                                </form>
                                
                            </th>
                        </tr>
                }
            }
        </thead>
        
    </table>
</div>


<div id="reportes" class="tabcontent">
    @{ 
        using (Negocio.OperacionesUsuarios opusu = new Negocio.OperacionesUsuarios())
        {
            List<Negocio.ClasesModelo.Usuario> listaAlumnos = opusu.TraerTodo().Where(p=>p.TipoUsuario==2).ToList<Negocio.ClasesModelo.Usuario>();
            if (lista.Count>0)
            {
                <table id="TAlumnos">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Username</th>
                            <th>Pasword</th>
                            <th>Primer nombre</th>
                            <th>Segundo nombre</th>
                            <th>Apellido paterno</th>
                            <th>Apellido materno</th>
                            <th>Email</th>
                            <th>Celular</th>
                            <th>Fono fijo</th>
                            <th>tipo usuario</th>
                            <th>alumno regular</th>
                            <th>Carrera</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    @{ 
                        foreach (Negocio.ClasesModelo.Usuario alumno in listaAlumnos)
                        {
                    <tr>
                        <th>@alumno.IdUsuario</th>
                        <th>@alumno.Username</th>
                        <th>@alumno.Password</th>
                        <th>@alumno.Pnombre</th>
                        <th>@alumno.Snombre</th>
                        <th>@alumno.Appat</th>
                        <th>@alumno.Apmat</th>
                        <th>@alumno.Email</th>
                        <th>@alumno.FonoCelular</th>
                        <th>@alumno.FonoFijo</th>
                        <th>@alumno.TipoUsuario</th>
                        <th>@alumno.AlumnoRegular</th>
                        <th>@alumno.IdCarrera</th>
                        <th> <a href="javascript:void(0)" onclick="GenerarReporte(@alumno.IdUsuario,1)"><img src="~/Scripts/images/DescargarPDF.png" width="20" height="20" /></a> </th>
                    </tr>
                        }
                    }
                </table>
            }
            else
            {
                <label>No hay alumnos registrados</label>
            }
        }
    }
</div>

<div id="ayuda" class="tabcontent">
    fdb
</div>